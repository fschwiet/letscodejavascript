{
  "name": "find",
  "version": "0.1.4",
  "description": "Find files or directories by name",
  "url": "https://github.com/yuanchuan/find",
  "author": {
    "name": "yuanchuan",
    "email": "yuanchuan23@gmail.com",
    "url": "http://yuanchuan.name"
  },
  "main": "./index.js",
  "dependencies": {
    "traverse-chain": "~0.1.0"
  },
  "keywords": [
    "find",
    "findfile",
    "search",
    "files"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/yuanchuan/find.git"
  },
  "readme": "#find\n\nFind files or directories by name.\n\n\n## Installation\n\n```bash\n$ npm install find\n```\n\n## Examples\n\nFind all `.js` files in current directory.\n\n```javascript\nvar find = require('find');\n\nfind.file(/\\.js$/, __dirname, function(files) {\n  console.log(files.length);\n})\n```\n\n## Features\n  * Recursively search each sub-directories\n  * Asynchronously or synchronously \n  * Filtering by regular expression or string comparing\n\n\n## API\n\n### #file(pattern, root, callback)\n\n```javascript\nfind.file(/log/, __dirname, function(files) {\n  //\n})\n```\n\n### #dir(pattern, root, callback)\n```javascript\nfind.dir(/log/, __dirname, function(dirs) {\n  //\n})\n``` \n\n\n### #eachfile(pattern, root, action)\n\n```javascript\nfind.eachfile(/./, __dirname, function(file) {\n  //\n})\n```\n\n### #eachdir(pattern, root, callback)\n\n```javascript\nfind.eachdir(/./, __dirname, function(dir) {\n  //\n})\n```  \n\n* `find.eachfile` and `find.eachdir` will return an object with an `end` method to be used as callback function since this is asynchronous way.\n\n```javascript\nfind\n  .eachfile(/./, __dirname, function(file) {\n    console.log(file);\n  })\n  .end(function() {\n    console.log('find end'); \n  }) \n```\n \n\n### #fileSync(pattern, root)\n```javascript\nvar files = find.fileSync(/./, __dirname);\n```\n\n### #dirSync(pattern, root)\n```javascript\nvar dirs = find.dirSync(/./, __dirname);\n```\n \n## LICENSE\n\n(MIT Licensed)\n",
  "readmeFilename": "README.md",
  "_id": "find@0.1.4",
  "dist": {
    "shasum": "7503c0669cb92d5cc8f191d70cd4a4c504af4728"
  },
  "_from": "find"
}
