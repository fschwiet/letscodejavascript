{
  "name": "jade-amd",
  "version": "0.1.0",
  "description": "Helpers for working with Jade templates in an AMD setting",
  "keywords": [
    "jade",
    "amd",
    "requirejs",
    "express",
    "middleware",
    "connect",
    "client-side"
  ],
  "homepage": "https://github.com/mysociety/node-jade-amd",
  "bugs": {
    "url": "http://github.com/mysociety/node-jade-amd/issues"
  },
  "contributors": [
    {
      "name": "Edmund von der Burg",
      "email": "evdb@mysociety.org",
      "url": "http://www.mysociety.org/"
    },
    {
      "name": "Marten Lienen",
      "email": "marten.lienen@gmail.com",
      "url": "http://cqql.de"
    }
  ],
  "main": "jade-amd",
  "bin": {
    "jade-amd": "./bin/jade-amd"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mysociety/node-jade-amd.git"
  },
  "dependencies": {
    "commander": ">= 0.6.0",
    "mkdirp": ">= 0.3.2",
    "findit": ">= 0.1.2"
  },
  "devDependencies": {
    "express": ">=2 <3",
    "jade": ">= 0.25.0",
    "requirejs": ">= 1.0.8"
  },
  "engines": {
    "node": "*"
  },
  "readme": "# Jade to AMD conversion helpers\n\nThis module lets you use Jade easily on the browser in an AMD environment - like RequireJS.\n\nIt provides:\n\n  * a method to return an AMD wrapped Jade runtime.js\n  * a method to compile Jade templates to AMD wrapped functions\n  * connect middleware to serve the complied templates for development\n  * example of a build that puts files in the right place for something like RequireJS to bundle\n  * Jade version agnostic - it uses the Jade that you've npm installed.\n\n\n## Installation\n\n    npm install jade-amd\n\n\n## Introduction\n\nSee the `README.md` file in the `example` folder. It contains a guided tour through all the moving parts.\n\n\n## Components\n\nThese are the interesting bits:\n\n\n### Connect middleware\n\nThe middleware is there for when you are developing. It intercepts requests for template js and compiles and serves the templates directly. This means that you don't need to make any changes to the browser-side code.\n\n    var jadeAmd = require('jade-amd');\n    app.use( '/js/templates/', jadeAmd.jadeAmdMiddleware({}) );\n\n\n### Jade Runtime\n\nJade ships with a `runtime.js` that lets you run precompiled templates on the client with out requiring the whole of the Jade templating system. This script needs to be wrapped to work with AMD loaders such as RequireJS:\n\n    # wrap Jade's runtime.js in AMD semantics\n    jade-amd --runtime > public/js/jadeRuntime.js\n\n\n### Compile and wrap the templates\n\nGoes through all the `.jade` files and compiles them to JavaScript, and then wraps them for AMD loaders. See the `README.md` and `Makefile` in the `example` folder for more details on how to integrate into your project.\n\n    # compile and wrap you templates\n    jade-amd --from views/ --to public/js/templates\n\n\n### Using the Jade templates on the browser.\n\nAssuming that you have used RequireJS your browser JavaScript will now look something like this:\n\n    require([ 'templates/person' ], function(personTemplate) {\n      var rendered_content = personTemplate({ name: 'Joe Bloggs' });\n    });\n\nAnd you can use exactly the same template on the server side!\n\n\n## Inspiration\n\n * https://github.com/visionmedia/jade/issues/634\n * https://github.com/pgherveou/squid/blob/master/src/lib/JadeBuilder.coffee\n\n",
  "readmeFilename": "README.md",
  "_id": "jade-amd@0.1.0",
  "_from": "jade-amd"
}
