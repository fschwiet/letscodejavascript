ugh, digitalocean ip address makes things hard to configure.  options:
  - require digitalocean VM to be ready for hosting before deploying site
    - refactor site-specific tail of vagrantfile to be script calls of things in /scripts folder
    - add a single script someone can use to add a project 
      - parameters:  1) project name, 2) source repro, 3) configuration directory
      - will get credentials be updated?


  - require digitalocean VM to be primed so we have a IP address we can configure, use vagrant rebuild
  - code agnostic to deployment server's IP address
    - config.js provider uses require to include config files
    - config files can assume the ip address has been passed into them
      - ip address may be null
      - config file may be called again
    - config system can reload config.  null values can be replaced, but existing values can't change
    - throw exception if null config is consumed


  can we get the public IP address during deployment to configure the server_hostname?
    vagrant up output includes:
      C:\src\cumulonimbus-machine [fschwiet]> vagrant up --provider=digital_ocean
      Bringing machine 'default' up with 'digital_ocean' provider...
      ==> default: Using existing SSH key: cumulonimbus-machine fschwiet
      ==> default: Creating a new droplet...
      ==> default: Assigned IP address: 162.243.199.7



deploy to digital ocean
  - https://www.digitalocean.com/community/tutorials/how-to-use-digitalocean-as-your-provider-in-vagrant-on-an-ubuntu-12-10-vps
    - install vagrant plugin
    - use box digital_ocean https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box
      (they add the box to the local vagrant install, but it could be in source)
    - generate a key an ssh key (ssh-keygen -t rsa)
    - add provider element to Vagrantfile
      - be sure to set a useful ssh_key_name  (this is shown in digital ocean's key management UI)
    - in some cases, needed to add an SSL key to the global environment (SSL_CERT_FILE)
      - lets hope not. Prefer not to automate, may need a checklist
      - documentation for vagrant box said this was mac-only
    - vagrant up

  - need to store/use some secrets:
    - SSH key for root access (new)
    - wwwuser password (comes from config.json override)

    - call to "jake deployDigitalOcean" might take as reference an alternative config.json file to use
      - config.js loads that file over config.json
        - load config file with require() so that script can resolve relative path to SSH key      
      - vagrant includes the file, that ruby file overrides vagrantfile variables
        - replace useVagrantHost with useConfigFile
        - fail if the fail is specified but fails to load


auto-deploy on new commits
  - email on completion

  

environment variables bad place for secret strings?  
  http://stackoverflow.com/questions/14786072/keep-secret-keys-out-with-environment-variables


  it would be nice for the homepage to have links to view posts for a particular subscription

  client side tests were stalling on firefox or something?

  status page should indicate if email settings are working
     - watch http://stackoverflow.com/questions/18774630/how-can-i-validate-smtp-hostname-port-username-password-is-working-on-node-js


  ugh, 5 second wait in login.js

  how to port the auth stuff to another site?
    - MySQL
    - all the passport stuff
      - views
      - auth.js
      - tests
      - data-access
      - migrations

      


  info notification on /feeds should have better layout

  should have a loading indicator

  should have post preview


  should have a way to kill karma server+client processes, use it for deployToIIS


    -> add jake task that verifies that hostname resolves to local machine (127.0.0.1)
      in error message, recommend the hosts file be modified.
      

  should have better error output when migrations fail when database not found

  should have automated rollback

  reduce personal information requested from google (only using email, displayName)
    
LATER:
    allow users to add a feed by non-RSS url

    log at info level if an rss feed can't be loaded?  (maybe this should be a feed status)

    open an issue on iisnode because it was failing get requests with a content-type (node.js from the command-line was more graceful)


MUCH LATER:
    should I publish the jade preprocessor for karma?


HMMM
    vagrant-digitalocean doesn't support private_network
    vagrant-digitalocean doesn't support forwarding ports (reverse-forwarded ports may work)
 
    didn't catch bug with automated tests when request parameters used in client-side didn't match what was used in server-side tests
      end-to-end test for this functionality was being painful to write

    use git read-tree --prefix=testhack master to project deployment instead of checking out



SOME LESSONS LEARNED:
  
  Set SQL collation when you create a database.  The default probably isn't utf8.
  Table names by default are case sensitive on Unix, but not Windows.  

  node-mysql will treat incoming dates as being in the local timezone, set the timezone to Z to disable that.
