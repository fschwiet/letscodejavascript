




auto-deploy on new commits
  - email on completion

  

environment variables bad place for secret strings?  
  http://stackoverflow.com/questions/14786072/keep-secret-keys-out-with-environment-variables


  it would be nice for the homepage to have links to view posts for a particular subscription

  client side tests were stalling on firefox or something?

  status page should indicate if email settings are working
     - watch http://stackoverflow.com/questions/18774630/how-can-i-validate-smtp-hostname-port-username-password-is-working-on-node-js


  ugh, 5 second wait in login.js

  how to port the auth stuff to another site?
    - MySQL
    - all the passport stuff
      - views
      - auth.js
      - tests
      - data-access
      - migrations

      


  info notification on /feeds should have better layout

  should have a loading indicator

  should have post preview


  should have a way to kill karma server+client processes, use it for deployToIIS


    -> add jake task that verifies that hostname resolves to local machine (127.0.0.1)
      in error message, recommend the hosts file be modified.
      

  should have better error output when migrations fail when database not found

  should have automated rollback

  reduce personal information requested from google (only using email, displayName)
    
LATER:
    allow users to add a feed by non-RSS url

    log at info level if an rss feed can't be loaded?  (maybe this should be a feed status)

    open an issue on iisnode because it was failing get requests with a content-type (node.js from the command-line was more graceful)


MUCH LATER:
    should I publish the jade preprocessor for karma?


HMMM

    lessons learned about digital ocean:
        - IP address isn't available until VM is created.
        - vagrant private_network doesn't work
        - port forwarding doesn't work
    implications:
        - lots of challenges to run tests as they are against digital ocean environment

 
    didn't catch bug with automated tests when request parameters used in client-side didn't match what was used in server-side tests
      end-to-end test for this functionality was being painful to write

    use git read-tree --prefix=testhack master to project deployment instead of checking out



SOME LESSONS LEARNED:
  
  Set SQL collation when you create a database.  The default probably isn't utf8.  Mysqldump will not take care of the default collation setting, you need to set default collation before importing

  Table names by default are case sensitive on Unix, but not Windows.  

  node-mysql will treat incoming dates as being in the local timezone, set the timezone to Z to disable that.
