
vagrant mode:
  we need to make sure the VM can reach the port the fake rss reader is on, (fakeServer_hostName=192.168.33.1, fakeServer_port=80)
  (ditto for the SMTP server)
  - mac won't listen on 127.0.0.76 anyway (the port when not using vagrant in testing)

  server.test.js maybe shouldn't call server.start directly


Because tests have an external RSS server,
    To run vagrant tests, need to open up firewall on port config:fakeServer_port.
    To run non-vagrant test, still need vagrant adapter configured to run on fakeServer_hostName



https://groups.google.com/forum/#!topic/vagrant-up/s69YHYN0KWE



tests run RSS servers- they need to be made accessible to the vagrant box
  - add config for hostname of localhost rss server "thirdpartyserver_faked_hostname"
  - replace localhost/127.0.0.1 in tests with that config
  - update thirdpartyserver_faked_hostname config value in host.config/config.json
  
  
its not obvious that certain config values production  - is there a way to make it obvious which configs are not needed by the production server?
  (fakeServer_hostName, fakeServer_port, googleTest_username, googleTest_password)



run tests against vagrant VM


port over security stuff from helloVagrant
  - remember to leave port fakeServer_port open


environment variables bad place for secret strings?  
  http://stackoverflow.com/questions/14786072/keep-secret-keys-out-with-environment-variables


  use git read-tree --prefix=testhack master
    to project deployment instead of checking out

  integration tests should run within the VM
    - modify setup.js's whenRunningTheServer
      - skip starting the node process
      - wait for server availability
        - use VM's target address
      - for debugability, may want it to be optional.

  it would be nice for the homepage to have links to view posts for a particular subscription

  client side tests were stalling on firefox or something?

  status page should indicate if email settings are working
     - watch http://stackoverflow.com/questions/18774630/how-can-i-validate-smtp-hostname-port-username-password-is-working-on-node-js


  ugh, 5 second wait in login.js

  how to port the auth stuff to another site?
    - MySQL
    - all the passport stuff
      - views
      - auth.js
      - tests
      - data-access
      - migrations

      


  info notification on /feeds should have better layout

  should have a loading indicator

  should have post preview


  should have a way to kill karma server+client processes, use it for deployToIIS


    -> add jake task that verifies that hostname resolves to local machine (127.0.0.1)
      in error message, recommend the hosts file be modified.
      

  should have better error output when migrations fail when database not found

  should have automated rollback

  reduce personal information requested from google (only using email, displayName)
    
LATER:
    allow users to add a feed by non-RSS url

    log at info level if an rss feed can't be loaded?  (maybe this should be a feed status)

    open an issue on iisnode because it was failing get requests with a content-type (node.js from the command-line was more graceful)


MUCH LATER:
    should I publish the jade preprocessor for karma?


HMMM
    didn't catch bug with automated tests when request parameters used in client-side didn't match what was used in server-side tests
      end-to-end test for this functionality was being painful to write


SOME LESSONS LEARNED:
  
  Set SQL collation when you create a database.  The default probably isn't utf8.

  node-mysql will treat incoming dates as being in the local timezone, set the timezone to Z to disable that.
