

GOAL:

  should show database available feeds on page load
     -> and skip loading feeds that have recent enough content


  should be able to mark anything older than a week as read


  should have a way to kill karma server+client processes, use it for deployToIIS


    -> add jake task that verifies that hostname resolves to local machine (127.0.0.1)
      in error message, recommend the hosts file be modified.
      

  should have error logging when login fails using http://192.168.1.248 (hostname doesn't match configuration hostname)

  should have better error output when migrations fail (when database not found)

  should have automated rollback


TODO:

  

  - MySQL connection pooling?
    https://github.com/felixge/node-mysql
    node-mysql supports it natively
      https://npmjs.org/package/mysql-simple
      - stale by 2 years
      https://npmjs.org/package/easy-mysql
      - stale by 6 months
      https://npmjs.org/package/mysql-connection-pool
      - stale by 6 months
      https://npmjs.org/package/node-mysql-pooled
      - stale by 8 months

  reduce personal information requested from google (only using email, displayName)
    
LATER:
    allow users to add a feed

    log at info level if an rss feed can't be loaded?  (maybe this should be a feed status)

    open an issue on iisnode because it was failing get requests with a content-type (node.js from the command-line was more graceful)

HMMM
    didn't catch bug with automated tests when request parameters used in client-side didn't match what was used in server-side tests
      end-to-end test for this functionality was being painful to write


    can I write a jade preprocessor for karma?
      https://gist.github.com/ryanfitz/834768
      https://github.com/karma-runner/karma/issues/565    
      - canary build of karma may allow registering a preprocessor


    should I build runtime.js as part of the build in case jade is updated?


LESSONS LEARNED:
  
  Set SQL collation when you create a database.  The default probably isn't utf8.

  node-mysql will treat incoming dates as being in the local timezone, set the timezone to Z to disable that.
